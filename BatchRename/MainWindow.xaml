<Fluent:RibbonWindow 
        x:Class="BatchRename.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BatchRename"
        xmlns:Fluent="clr-namespace:Fluent;assembly=Fluent"
        mc:Ignorable="d"
        SourceInitialized="RibbonWindow_SourceInitialized"
        Loaded="RibbonWindow_Loaded"
        Closed="RibbonWindow_Closed"
        
        x:Name="mainwindow"
        Icon="Images/rename.png"
        Title="Batch Rename" MinHeight="470" MinWidth="500" Width="800">
    <Control.Resources>
        <local:WidthFourConverter x:Key="widthFourConverter" />
        <local:HeightConverter x:Key="heightConverter" />
    </Control.Resources>
    <StackPanel>
        <Fluent:Ribbon>
            <Fluent:Ribbon.Menu>
                <Fluent:Backstage Header="File"/>
            </Fluent:Ribbon.Menu>
            <Fluent:RibbonTabItem Header="Home">
                <Fluent:RibbonGroupBox Header="File">
                    <Fluent:Button x:Name="btnAdd" Width="50" Header="Add" Click="btnAdd_Click">
                        <Fluent:Button.LargeIcon>
                            <Image Source="Images/add.png" RenderOptions.BitmapScalingMode="HighQuality"/>
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="btnRemove" Width="50" Header="Remove" Click="btnRemove_Click" >
                        <Fluent:Button.LargeIcon>
                            <Image Source="Images/remove.png" RenderOptions.BitmapScalingMode="HighQuality"/>
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="btnClearAll" Width="50" Header="Clear File" Click="btnClearAll_Click">
                        <Fluent:Button.LargeIcon>
                            <Image Source="Images/clearAll.png" RenderOptions.BitmapScalingMode="HighQuality"/>
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="Folder">
                    <Fluent:Button x:Name="btnAddFolder" Width="50" Header="Add" Click="btnAddFolder_Click">
                        <Fluent:Button.LargeIcon>
                            <Image Source="Images/addfolder.png" RenderOptions.BitmapScalingMode="HighQuality"/>
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="btnRemoveFolder" Width="50" Header="Remove" Click="btnRemoveFolder_Click" >
                        <Fluent:Button.LargeIcon>
                            <Image Source="Images/remove.png" RenderOptions.BitmapScalingMode="HighQuality"/>
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="btnClearAllFolder" Width="50" Header="Clear Folder" Click="btnClearAllFolder_Click">
                        <Fluent:Button.LargeIcon>
                            <Image Source="Images/clearAll.png" RenderOptions.BitmapScalingMode="HighQuality"/>
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="Tool">
                    <Fluent:Button x:Name="btnReplace" Width="65" Header="Replace Extension" Click="btnReplace_Click">
                        <Fluent:Button.LargeIcon>
                            <Image Source="Images/replace.png" RenderOptions.BitmapScalingMode="HighQuality"/>
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="btnAddCounter" Width="65" Header="Add Counter" Click="btnAddCounter_Click">
                        <Fluent:Button.LargeIcon>
                            <Image Source="Images/counter.png" RenderOptions.BitmapScalingMode="HighQuality"/>
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="btnNewCase" Width="65" Header="New Case" Click="btnNewCase_Click" >
                        <Fluent:Button.LargeIcon>
                            <Image Source="Images/newcase.png" RenderOptions.BitmapScalingMode="HighQuality"/>
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="btnNormalize" Width="65" Header="Normalize" Click="btnNormalize_Click">
                        <Fluent:Button.LargeIcon>
                            <Image Source="Images/normalize.png" RenderOptions.BitmapScalingMode="HighQuality"/>
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="btnRandomName" Width="65" Header="Random Name" Click="btnRandomName_Click">
                        <Fluent:Button.LargeIcon>
                            <Image Source="Images/random.png" RenderOptions.BitmapScalingMode="HighQuality"/>
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
            <Fluent:RibbonTabItem Header="Custom">
                <Fluent:RibbonGroupBox Header="Group Rules">
                    <ListView Name="listCombo" Background="Transparent" BorderBrush="Transparent"
                      ScrollViewer.VerticalScrollBarVisibility="Disabled">
                        <ListView.Resources>
                            <ContextMenu x:Key="ChoiceContextMeu">
                                <MenuItem Header="Delete" Click="MenuItem_Click_2" ></MenuItem>
                            </ContextMenu>

                        </ListView.Resources>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="ContextMenu" Value="{StaticResource ChoiceContextMeu}"/>
                                <EventSetter Event="PreviewMouseLeftButtonDown" Handler="ListViewItem_MouseLeftButtonDown" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Width="50" Orientation="Vertical">
                                    <Image Source="Images/grouprule.png" HorizontalAlignment="Center"  Height="30" Width="30"></Image>
                                    <TextBlock Text="{Binding Name}" TextWrapping="Wrap" HorizontalAlignment="Center"></TextBlock>
                                </StackPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>

                    
                    
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
        </Fluent:Ribbon>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5.5*"></ColumnDefinition>
                <ColumnDefinition Width="2.5*"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <ListView x:Name="listFiles" Height="{Binding ElementName=mainwindow, Path=ActualHeight, Converter={StaticResource heightConverter}}"  Background="Transparent"
                      DragEnter="listFiles_DragEnter" Drop="listFiles_Drop"  AllowDrop="True"
                      VerticalAlignment="Top"
                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      HorizontalAlignment="Stretch"
                      
                      Grid.Column="0">

                <ListView.View >
                    <GridView>
                        <GridViewColumn Header="Name" Width="{Binding ElementName=listFiles, Path=ActualWidth, Converter={StaticResource widthFourConverter}}" DisplayMemberBinding="{Binding Name}"> </GridViewColumn>
                        <GridViewColumn Header="New Name" Width="{Binding ElementName=listFiles, Path=ActualWidth, Converter={StaticResource widthFourConverter}}" DisplayMemberBinding="{Binding NewName}"></GridViewColumn>
                        <GridViewColumn Header="Type" Width="{Binding ElementName=listFiles, Path=ActualWidth, Converter={StaticResource widthFourConverter}}" DisplayMemberBinding="{Binding Type}"></GridViewColumn>
                        <GridViewColumn Header="Path" Width="{Binding ElementName=listFiles, Path=ActualWidth, Converter={StaticResource widthFourConverter}}" DisplayMemberBinding="{Binding Path}"></GridViewColumn>

                    </GridView>
                </ListView.View>
                <ListView.Resources>
                    <ContextMenu x:Key="ItemContextMenu">
                        <MenuItem Header="Delete" Click="MenuItem_Click_3"></MenuItem>
                        <MenuItem Header="Apply Rename" Click="MenuItem_Click_4"></MenuItem>
                    </ContextMenu>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="15"/>
                        <Setter Property="Background" Value="Red"/>
                        <Setter Property="BorderBrush" Value="Transparent"></Setter>
                    </Style>
                </ListView.Resources>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel></WrapPanel>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
            </ListView>

            <StackPanel Grid.Column="1" Height="300">
                <Border BorderBrush="{x:Null}" Margin="5,10,0,0" Width="{Binding ElementName=mainwindow, Path=ActualWidth, Converter={StaticResource widthFourConverter}}">
                    <TextBlock Text="RULE LIST" FontWeight="Black" Foreground="Blue" HorizontalAlignment="Center"  FontSize="20" Canvas.Left="56" Height="36"  Canvas.Top="5"/>
                </Border>
                <ListView Name="listChoice" Background="Transparent" Height="180" Margin="5,10,0,0" Grid.Column="1" Width="{Binding ElementName=mainwindow, Path=ActualWidth, Converter={StaticResource widthFourConverter}}" Canvas.Left="15" Canvas.Top="31"
                      ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <ListView.Resources>
                        <ContextMenu x:Key="ChoiceContextMeu">
                            <MenuItem Header="Edit" Click="MenuItem_Click"></MenuItem>
                            <MenuItem Header="Delete" Click="MenuItem_Click_1"></MenuItem>

                        </ContextMenu>

                    </ListView.Resources>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="ContextMenu" Value="{StaticResource ChoiceContextMeu}"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Vertical" />
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Border BorderBrush="Transparent" Height="35" Width="{Binding ElementName=mainwindow, Path=ActualWidth, Converter={StaticResource widthFourConverter}}" CornerRadius="15">
                                <TextBlock TextWrapping="Wrap"
                                       FontSize="8"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Foreground="Blue"
                                       FontWeight="Bold">
                                    <Run> ◉ </Run>
                                    <Run  Text="{Binding Description}"></Run>
                                </TextBlock>
                            </Border>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <Canvas HorizontalAlignment="Center"  Width="250"> 
                    <ToggleButton Name="btnClearRules" Click="btnClearRules_Click"  Margin="0 15 0 15" Canvas.Top="5" Canvas.Left="70">
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="Foreground" Value="White"></Setter>
                            <Setter Property="Background" Value="#FFE25E05"></Setter>
                            <Setter Property="Content" Value="  Clear  "></Setter>
                            <Setter Property="FontSize" Value="15"></Setter>
                            <Setter Property="FontWeight" Value="Bold"></Setter>
                            <Setter Property="ToggleButton.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Gray" Direction="270" ShadowDepth="2" BlurRadius="5" Opacity="0.3" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                            Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Center"                  
                                              VerticalAlignment="Center"/>

                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="White"></Setter>
                                    <Setter Property="Background" Value="#8B0000"/>
                                    <Setter Property="BorderThickness" Value="1,1,2,2"></Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                    <ToggleButton.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="10"/>
                        </Style>
                    </ToggleButton.Resources>
                </ToggleButton>
                    <ToggleButton Name="btnSaveRules" Click="btnSaveRules_Click" Margin="0 15 0 15" Canvas.Top="5" Canvas.Left="150">
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="Foreground" Value="White"></Setter>
                            <Setter Property="Background" Value="#FFE25E05"></Setter>
                            <Setter Property="Content" Value="  Save  "></Setter>
                            <Setter Property="FontSize" Value="15"></Setter>
                            <Setter Property="FontWeight" Value="Bold"></Setter>
                            <Setter Property="ToggleButton.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Gray" Direction="270" ShadowDepth="2" BlurRadius="5" Opacity="0.3" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                            Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Center"                  
                                              VerticalAlignment="Center"/>

                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="White"></Setter>
                                    <Setter Property="Background" Value="#8B0000"/>
                                    <Setter Property="BorderThickness" Value="1,1,2,2"></Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                    <ToggleButton.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="10"/>
                        </Style>
                    </ToggleButton.Resources>
                </ToggleButton>
                    <ToggleButton Name="btnConfirm" Click="btnConfirm_Click" Margin="0 15 0 15" Canvas.Top="35" Canvas.Left="100">
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="Foreground" Value="White"></Setter>
                            <Setter Property="Background" Value="#D23232"></Setter>
                            <Setter Property="Content" Value=" Confirm "></Setter>
                            <Setter Property="FontSize" Value="15"></Setter>
                            <Setter Property="FontWeight" Value="Bold"></Setter>
                            <Setter Property="ToggleButton.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Gray" Direction="270" ShadowDepth="2" BlurRadius="5" Opacity="0.3" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                            Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Center"                  
                                              VerticalAlignment="Center"/>

                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="White"></Setter>
                                    <Setter Property="Background" Value="#8B0000"/>
                                    <Setter Property="BorderThickness" Value="1,1,2,2"></Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                    <ToggleButton.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="10"/>
                        </Style>
                    </ToggleButton.Resources>
                </ToggleButton>
                </Canvas>
                

            </StackPanel>
        </Grid>

    </StackPanel>
</Fluent:RibbonWindow>
