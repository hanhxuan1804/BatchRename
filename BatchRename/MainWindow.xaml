<Fluent:RibbonWindow 
        x:Class="BatchRename.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BatchRename"
        xmlns:Fluent="clr-namespace:Fluent;assembly=Fluent"
        mc:Ignorable="d"
        Loaded="RibbonWindow_Loaded"
        Title="MainWindow" Height="450" Width="800">
    <StackPanel>
        <Fluent:Ribbon>
            <Fluent:Ribbon.Menu>
                <Fluent:Backstage Header="File"/>
            </Fluent:Ribbon.Menu>
            <Fluent:RibbonTabItem Header="Home">
                <Fluent:RibbonGroupBox Header="Basic">
                    <Fluent:Button x:Name="btnAdd" Width="50" Header="Add" Click="btnAdd_Click">
                        <Fluent:Button.LargeIcon>
                            <Image Source="Images/add.png" RenderOptions.BitmapScalingMode="HighQuality"/>
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="btnRemove" Width="50" Header="Remove" Click="btnRemove_Click" >
                        <Fluent:Button.LargeIcon>
                            <Image Source="Images/remove.png" RenderOptions.BitmapScalingMode="HighQuality"/>
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="btnClearAll" Width="50" Header="Clear All" Click="btnClearAll_Click">
                        <Fluent:Button.LargeIcon>
                            <Image Source="Images/clearAll.png" RenderOptions.BitmapScalingMode="HighQuality"/>
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="Tool">
                    <Fluent:Button x:Name="btnReplace" Width="65" Header="Replace Extension" Click="btnReplace_Click">
                        <Fluent:Button.LargeIcon>
                            <Image Source="Images/replace.png" RenderOptions.BitmapScalingMode="HighQuality"/>
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="btnAddCounter" Width="65" Header="Add Counter" Click="btnAddCounter_Click">
                        <Fluent:Button.LargeIcon>
                            <Image Source="Images/counter.png" RenderOptions.BitmapScalingMode="HighQuality"/>
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="btnNewCase" Width="65" Header="New Case" Click="btnNewCase_Click" >
                        <Fluent:Button.LargeIcon>
                            <Image Source="Images/newcase.png" RenderOptions.BitmapScalingMode="HighQuality"/>
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="btnNormalize" Width="65" Header="Normalize" Click="btnNormalize_Click">
                        <Fluent:Button.LargeIcon>
                            <Image Source="Images/normalize.png" RenderOptions.BitmapScalingMode="HighQuality"/>
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="btnRandomName" Width="65" Header="Random Name" Click="btnRandomName_Click">
                        <Fluent:Button.LargeIcon>
                            <Image Source="Images/random.png" RenderOptions.BitmapScalingMode="HighQuality"/>
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
        </Fluent:Ribbon>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="600"></ColumnDefinition>
                <ColumnDefinition Width="200"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            
                <ListView x:Name="listFiles" Height="auto"  Background="Transparent"  VerticalAlignment="Top"
                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      Grid.Column="0">
                
                <ListView.View >
                    <GridView>
                        <GridViewColumn Header="Name" Width="150" DisplayMemberBinding="{Binding Name}"></GridViewColumn>
                        <GridViewColumn Header="New Name" Width="150" DisplayMemberBinding="{Binding NewName}"></GridViewColumn>
                        <GridViewColumn Header="Path" Width="150" DisplayMemberBinding="{Binding Path}"></GridViewColumn>
                        <GridViewColumn Header="Error" Width="150" DisplayMemberBinding="{Binding Error}"></GridViewColumn>
                    </GridView>
                </ListView.View>
                <ListView.Resources>
                    <ContextMenu x:Key="ItemContextMenu">
                        <MenuItem Header="Delete" ></MenuItem>
                        <MenuItem Header="Update" ></MenuItem>
                    </ContextMenu>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="15"/>
                        <Setter Property="Background" Value="Red"/>
                        <Setter Property="BorderBrush" Value="Transparent"></Setter>
                    </Style>
                </ListView.Resources>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel></WrapPanel>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
            </ListView>

            <Canvas Grid.Column="1" Height="300">
            <ListView Name="listChoice" Background="Transparent" Height="200" Margin="5,10,0,0" Grid.Column="1" Width="170" Canvas.Left="10" Canvas.Top="10"
                      ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <ListView.Resources>
                        <ContextMenu x:Key="ChoiceContextMeu">
                            <MenuItem Header="Edit" Click="MenuItem_Click"></MenuItem>
                            <MenuItem Header="Delete" Click="MenuItem_Click_1"></MenuItem>

                        </ContextMenu>
                        
                    </ListView.Resources>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="ContextMenu" Value="{StaticResource ChoiceContextMeu}"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Vertical" />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemTemplate>
                    <DataTemplate>
                            <Border BorderBrush="Transparent" Height="35" Width="170" CornerRadius="15">
                                <TextBlock TextWrapping="Wrap"
                                       FontSize="8"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Foreground="Blue"
                                       FontWeight="Bold">
                                    <Run> ◉ </Run>
                                    <Run  Text="{Binding Description}"></Run>
                                </TextBlock>
                        </Border>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
                <ToggleButton Name="btnConfirm" Click="btnConfirm_Click" Margin="0 15 0 15" Canvas.Top="250" Canvas.Left="70">
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="Foreground" Value="White"></Setter>
                            <Setter Property="Background" Value="#D23232"></Setter>
                            <Setter Property="Content" Value=" Confirm "></Setter>
                            <Setter Property="FontSize" Value="15"></Setter>
                            <Setter Property="FontWeight" Value="Bold"></Setter>
                            <Setter Property="ToggleButton.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Gray" Direction="270" ShadowDepth="2" BlurRadius="5" Opacity="0.3" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                            Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Center"                  
                                              VerticalAlignment="Center"/>

                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="White"></Setter>
                                    <Setter Property="Background" Value="#8B0000"/>
                                    <Setter Property="BorderThickness" Value="1,1,2,2"></Setter>
                                </Trigger>                                
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                    <ToggleButton.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="10"/>
                        </Style>
                    </ToggleButton.Resources>
                </ToggleButton>

            </Canvas>
        </Grid>
            
    </StackPanel>
</Fluent:RibbonWindow>
